* {
    margin: 0;
    padding: 0;
    height: 100vh;
    width: 10;
  
    box-sizing: border-box;
  }
  
  html {
      box-sizing: border-box;
  }
  *, *:before, *:after {
      box-sizing: inherit;
  }
  
  /*	BASIC STYLING FOR THE DEMO */
  body {
      display: grid;
      min-block-size: 100vh;
      place-content: center;
      background: var(--background);
      color: var(--text);
  }
  
  /*	CURRENT MAX WIDTH IS JUST FOR DEMO PURPOSES */
  .tag-scrollers {
      width: 100%;
      max-width: 1200px;
      overflow: hidden;
  }
  
  /*	POSSIBLY UPDATE COLORS IN THE GRADIENT
          TO MATCH THE PROJECTS DESIGN SYSTEM
  */
  .tag-scroller {
      display: grid;
      gap: 1.5rem;
      mask: linear-gradient(90deg, #0000, var(--background) 15%, var(--background) 85%, #0000);
  }
  
  .tag-list {
      list-style: none;
      margin: 0;
      padding: 0;
      display: flex;
      flex-wrap: wrap;
      /*	IF THE GAP IS CHANGED, DON'T FORGET TO CHANGE 
              THE TRANSFORM VALUE IN THE SCROLL ANIMATION
              AT THE END OF THE STYLING
      */
      gap: 1.5rem;
  }
  
  /*	IF THE USERS PREFERS REDUCED MOTION
          PRESENT THEM WITH A HOROZONTAL LIST
          OF ALL ELEMENTS AND GIVE THEM THE
          OPTION TO MANUALLY SCROLL BY SWIPING
  */
  @media (prefers-reduced-motion) {
      .tag-list {
          flex-flow: row nowrap;
          overflow: auto;
          scrollbar-width: none;
          scrollbar-color: transparent transparent;
      }
      .tag-list::-webkit-scrollbar-track {
          background: transparent;
      }
      .tag-list::-webkit-scrollbar-thumb {
          background: transparent;
      }
      .tag-list::-webkit-scrollbar {
          display: none;
          width: 0;
          height: 0;
      }
  }
  
  /*	BASIC STYLING OF THE LIST ITEMS
          FOR DEMO PURPOSES. MOST PROPERTIES
          SHOULD BE KEPT AS IS BUT PROBABLY
          UPDATE THE VALUE FOR font-family
          AND border
  */
  .tag-list li {
      font-family: system-ui;
      font-size: 1.125rem;
      line-height: 1;
      padding: 0.625rem 1.375rem;
      border: 2px solid var(--border);
      border-radius: 10ch;
      white-space: nowrap;
  }
  
  /*	THE DURATION IS SET FROM A CUSTOM PROPERTY
          CALCULATED IN THE SCRIPT AS IT'S ONLY NEEDED
          IF THE ANIMATION SHOULD RUN, WHICH IS ALSO
          CHECKED BY THE SCRIPT
  
          THE DIRECTION IS SET TO normal AS DEFULT
          AND THEN SET TO reverse	FOR EVERY OTHER SCROLLER
  */
  .tag-scroller.scrolling .tag-list {
      width: max-content;
      flex-wrap: nowrap;
      animation: horizontal-scroll var(--duration) var(--direction, normal) linear infinite;
  }
  
  .tag-scroller.scrolling .tag-list:nth-child(even) {
      --direction: reverse;
  }
  
  /* PAUSING THE ANIMATION ON HOVER */
  .tag-scroller:hover .tag-list {
      animation-play-state: paused;
  }
  
  @keyframes horizontal-scroll {
      to {
          /*	0.75rem FOR HALF THE GAP
                  OF THE .tag-scroller
          */
          transform: translateX(calc(-50% - .75rem));
      }
  }
  
  html,
  body {
    width: 100vw;
    height: 100vh;
    overflow: hidden;
  }
  
  body {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    background: linear-gradient(0deg, rgb(255, 96, 54), rgb(253, 38, 122)) no-repeat;
  }
  
  #swiper {
    height: 70vh;
    aspect-ratio: 2 / 3;
    perspective: 1000px;
    perspective-origin: center 50%;
    transform-style: preserve-3d;
    position: relative;
  }
  
  .card {
    width: 90%;
    height: 100%;
    position: absolute;
    border-radius: 20px;
    overflow: hidden;
    transform: translateZ(calc(-30px * var(--i))) translateY(calc(-20px * var(--i))) rotate(calc(-4deg * var(--i)));
    filter: drop-shadow(2px 2px 20px rgba(0, 0, 0, 0.5));
    cursor: pointer;
    user-select: none;
    transition: transform 0.3s;
  }
  
  .card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 50% 50%;
  }
  
  #like,
  #dislike {
    font-size: 16vh;
    border-radius: 50%;
    padding: 20px;
    position: relative;
    z-index: 1;
    animation-name: animation1;
    animation-duration: 1s;
    animation-timing-function: ease-in-out;
    animation-fill-mode: both;
    /* don't run animation at the beginning */
    animation-play-state: paused;
  }
  
  #like.trigger,
  #dislike.trigger {
    animation-name: animation2;
  }
  
  #like {
    color: red;
    background-color: rgba(255, 255, 255, 0.5);
  }
  
  #dislike {
    color: #ccc;
    background-color: rgba(0, 0, 0, 0.5);
  }
  
  @keyframes animation1 {
  
    0%,
    100% {
      opacity: 0.2;
    }
  
    50% {
      opacity: 1;
    }
  }
  
  @keyframes animation2 {
  
    0%,
    100% {
      opacity: 0.2;
    }
  
    50% {
      opacity: 1;
    }
  }
  :root {
      --dark: #252A2E;
      --light: #F5F5F5;
      --background: var(--light);
      --text: var(--dark);
      --border: var(--dark);
  }
  @media (prefers-color-scheme: dark) {
      :root {
          --background: var(--dark);
          --text: var(--light);
          --border: var(--light);
      }
  }
  p {
    font-weight: 100;
  }
  @import url("https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap");
  
  * {
      padding: 0;
      margin: 0;
      box-sizing: border-box;
  }
  
  body {
      font-family: "Inter", sans-serif;
  }
  
  :root {
      --light: #ffe6e6;
      --dark: #0c0c0c;
  }
  
  .container {
      --bg-color: radial-gradient(
          circle at 50% 0%,
          rgba(50, 50, 50, 1) 0%,
          rgba(12, 12, 12, 1) 100%
      );
  
      overflow: clip;
      position: relative;
  
      display: flex;
      justify-content: center;
      align-items: center;
  
      padding: 2rem 5rem;
  
      width: 100%;
      height: 100dvh;
      background-image: var(--bg-color);
  }
  
  .category_container {
      --gap: 0.5rem;
  
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: nowrap;
      gap: calc(var(--gap) * 2);
  
      width: 100%;
      height: 100%;
  }
  
  .content {
      --active: 0;
  
      cursor: pointer;
      overflow: clip;
  
      position: relative;
      z-index: 10;
  
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      gap: 1.5rem;
  
      padding: 2.5rem;
  
      width: calc((100% / 3) - var(--gap));
      height: 100%;
  
      border-radius: 1rem;
  
      transition: width 0.5s ease-in-out;
  }
  .content:hover {
      --active: 1;
  
      width: calc(70% - var(--gap));
  }
  
  
  .content img {
      position: absolute;
      z-index: -20;
      top: 0;
      left: 0;
  
      width: 100%;
      height: 100%;
  
      object-fit: cover;
      object-position: center;
  }
  
  .content .profile_image {
      opacity: calc(1 - var(--active));
  
      transition: opacity 0.3s ease-in-out;
  }
  
